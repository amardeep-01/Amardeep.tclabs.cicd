name: ACHIEVE-UI-CICD

on:
  push:
    branches:
      - "*"
    tags:
      - 'dev_v*'
      - 'uat_v*'
      - 'prod_v*'
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select Environment
        options:
          - DEV
          - QA
          - UAT

jobs:
  build-and-deploy:
    name: Build and Deploy Angular Project
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install packages
        run: npm i -f

      - name: Building project
        run: ng build --base-href=/achieve/

      - name: Determine Environment
        id: env
        if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        run: |
          if [ "${{ github.event_name }}" == 'workflow_dispatch' ]; then
            echo "::set-output name=env::${{ github.event.inputs.environment }}"
          elif [[ "${{ github.ref }}" =~ ^refs/tags/ ]]; then
            TAG="${{ github.ref }}"
            if [[ "$TAG" =~ dev_v* ]]; then
              echo "::set-output name=env::DEV"
            elif [[ "$TAG" =~ uat_v* ]]; then
              echo "::set-output name=env::UAT"
            elif [[ "$TAG" =~ prod_v* ]]; then
              echo "::set-output name=env::QA"
            fi
          fi

      - name: Deploy
        if: success()
        run: |
              $ENV = "${{ steps.env.outputs.env }}"
              if ($ENV -eq "DEV") {
                  Get-ChildItem -Path "D:\Dev Environment\Core API\PowerHCM-ui\Achieve" | Remove-Item -Recurse -Force
                  Copy-Item -Path "dist/achieve-ui/browser/*" -Destination "D:\Dev Environment\Core API\PowerHCM-ui\Achieve" -Recurse -Force
              } elseif ($ENV -eq "QA") {
                  Get-ChildItem -Path "D:\Dev Environment\Core API\PowerHCM-ui\Achieve" | Remove-Item -Recurse -Force
                  Copy-Item -Path "dist/achieve-ui/browser/*" -Destination "D:\Dev Environment\Core API\PowerHCM-ui\Achieve" -Recurse -Force
              } elseif ($ENV -eq "UAT") {
                  Get-ChildItem -Path "D:\Dev Environment\Core API\PowerHCM-ui\Achieve" | Remove-Item -Recurse -Force
                  Copy-Item -Path "dist/achieve-ui/browser/*" -Destination "D:\Dev Environment\Core API\PowerHCM-ui\Achieve" -Recurse -Force
              } else {
                  Write-Output "Invalid environment"
                  exit 1
              }
