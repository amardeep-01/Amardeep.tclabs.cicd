name: ACHIEVE-UI-CICD

on:
  push: 
    branches: [demo-4]
    tags: 
      - 'dev*' 
      - 'uat*'
      - 'prod*'
  workflow_dispatch:
    inputs:
      environment: 
        type: choice
        description: Select Environment
        options:
          - DEV
          - QA
          - UAT

jobs:  
  build:
    name: Build and Deploy Angular Project
    runs-on: windows-latest

    steps:
      - name: Checkout Repository 
        uses: actions/checkout@v2

      - name: Install packages
        run: |
          npm i -f
          # npm install -g @angular/cli

      - name: Building project
        run: ng build

      - name: Determine Environment
        id: env
        run: |
           $env:TAG = "refs/tags/developer"
  
             if ($env:TAG -like "refs/tags/dev*") {
               Write-Output "::set-output name=env::DEV"
             } elseif ($env:TAG -like "refs/tags/qa*") {
             Write-Output "::set-output name=env::QA"
             } elseif ($env:TAG -like "refs/tags/uat*") {
             Write-Output "::set-output name=env::UAT"
             } else {
              Write-Output "Invalid tag format"
               exit 1
              }

      - name: Deploy
        run: |
              $ENV = "${{ steps.env.outputs.env }}"
              if ($ENV -eq "DEV") {
                  Get-ChildItem -Path "C:\Dev Environment\Core API\PowerHCM-ui\Achieve" | Remove-Item -Recurse -Force
                  Copy-Item -Path "dist/achieve-ui/browser/*" -Destination "C:\Dev Environment\Core API\PowerHCM-ui\Achieve" -Recurse -Force
              } elseif ($ENV -eq "QA") {
                  Get-ChildItem -Path "c:\Dev Environment\Core API\PowerHCM-ui\Achieve" | Remove-Item -Recurse -Force
                  Copy-Item -Path "dist/achieve-ui/browser/*" -Destination "c:\Dev Environment\Core API\PowerHCM-ui\Achieve" -Recurse -Force
              } elseif ($ENV -eq "UAT") {
                  Get-ChildItem -Path "c:\Dev Environment\Core API\PowerHCM-ui\Achieve" | Remove-Item -Recurse -Force
                  Copy-Item -Path "dist/achieve-ui/browser/*" -Destination "c:\Dev Environment\Core API\PowerHCM-ui\Achieve" -Recurse -Force 
              } else {
                  Write-Output "Invalid environment"
                  exit 1
              }



   
